name: Build and Release

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'  # 推送 v1.0.0 这样的标签时触发
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write  # 添加权限以创建 release
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
    
    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
    
    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}
    
    # 查找 exe 文件
    - name: Find exe file
      id: find_exe
      run: |
        $exe = Get-ChildItem -Path build -Filter *.exe -Recurse | Select-Object -First 1
        if ($exe) {
          echo "exe_path=$($exe.FullName)" >> $env:GITHUB_OUTPUT
          echo "exe_name=$($exe.Name)" >> $env:GITHUB_OUTPUT
          echo "Found exe: $($exe.FullName)"
        } else {
          echo "No exe file found!"
          exit 1
        }
      shell: pwsh
    
    # 普通推送时上传 artifact
    - name: Upload Build Artifact
      if: "!startsWith(github.ref, 'refs/tags/')"
      uses: actions/upload-artifact@v4
      with:
        name: LifeGame-Windows-${{ github.run_number }}
        path: ${{ steps.find_exe.outputs.exe_path }}
    
    # 推送 tag 时创建 release
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ steps.find_exe.outputs.exe_path }}
        generate_release_notes: true
